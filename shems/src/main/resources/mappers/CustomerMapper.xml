<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nyu.shems.mapper.CustomerMapper">
  <resultMap id="BaseResultMap" type="com.nyu.shems.entity.Customer">
    <id column="cid" jdbcType="INTEGER" property="cid" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="first_name" jdbcType="VARCHAR" property="firstName" />
    <result column="last_name" jdbcType="VARCHAR" property="lastName" />
    <result column="billing_address" jdbcType="VARCHAR" property="billingAddress" />
  </resultMap>
  <sql id="Base_Column_List">
    cid, username, `password`, first_name, last_name, billing_address
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from Customer
    where cid = #{cid,jdbcType=INTEGER}
  </select>
  <select id="login" parameterType = "java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from Customer
    where username = #{username,jdbcType=VARCHAR} and `password` = #{password, jdbcType=VARCHAR}
  </select>
  <select id="checkUsername" parameterType = "java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from Customer
    where username = #{username,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from Customer
    where cid = #{cid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="cid" keyProperty="cid" parameterType="com.nyu.shems.entity.Customer" useGeneratedKeys="true">
    insert into Customer (username, `password`, first_name, 
      last_name, billing_address)
    values (#{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{firstName,jdbcType=VARCHAR}, 
      #{lastName,jdbcType=VARCHAR}, #{billingAddress,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="cid" keyProperty="cid" parameterType="com.nyu.shems.entity.Customer" useGeneratedKeys="true">
    insert into Customer
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        `password`,
      </if>
      <if test="firstName != null">
        first_name,
      </if>
      <if test="lastName != null">
        last_name,
      </if>
      <if test="billingAddress != null">
        billing_address,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="firstName != null">
        #{firstName,jdbcType=VARCHAR},
      </if>
      <if test="lastName != null">
        #{lastName,jdbcType=VARCHAR},
      </if>
      <if test="billingAddress != null">
        #{billingAddress,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.nyu.shems.entity.Customer">
    update Customer
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        `password` = #{password,jdbcType=VARCHAR},
      </if>
      <if test="firstName != null">
        first_name = #{firstName,jdbcType=VARCHAR},
      </if>
      <if test="lastName != null">
        last_name = #{lastName,jdbcType=VARCHAR},
      </if>
      <if test="billingAddress != null">
        billing_address = #{billingAddress,jdbcType=VARCHAR},
      </if>
    </set>
    where cid = #{cid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.nyu.shems.entity.Customer">
    update Customer
    set username = #{username,jdbcType=VARCHAR},
      `password` = #{password,jdbcType=VARCHAR},
      first_name = #{firstName,jdbcType=VARCHAR},
      last_name = #{lastName,jdbcType=VARCHAR},
      billing_address = #{billingAddress,jdbcType=VARCHAR}
    where cid = #{cid,jdbcType=INTEGER}
  </update>
</mapper>